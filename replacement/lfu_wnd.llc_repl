#include "cache.h"
#include <assert.h>
#include <vector>

#define WND_SIZE 25

std::vector<vector<int>> wnds;

// initialize replacement state
void CACHE::llc_initialize_replacement()
{
    cout << "Initialize LFU state" << endl;
    for (int i = 0; i < LLC_SET; i++)
    {
        wnds.push_back({});
    }
}

// find replacement victim
uint32_t CACHE::llc_find_victim(uint32_t cpu, uint64_t instr_id, uint32_t set, const BLOCK *current_set, uint64_t ip, uint64_t full_addr, uint32_t type)
{
    vector<int> list = wnds[set];
    int freq[LLC_WAY] = {0};
    for (int i = 0; i < list.size(); i++)
    {
        freq[list[i]] += 1;
    }
    int index = 0;
    int min_freq = freq[0];
    for (int i = 1; i < LLC_WAY; i++)
    {
        if (freq[i] < min_freq)
        {
            min_freq = freq[i];
            index = i;
        }
    }
    // std::vector<int>::iterator it = wnds[set].begin();
    // while (it != wnds[set].end())
    // {
    //     if (*it != index)
    //     {
    //         it++;
    //     }
    //     else
    //     {
    //         wnds[set].erase(it);
    //     }
    // }
    // int has_index = 0;
    // for (int i = 0; i < wnds[set].size(); i++)
    // {
    //     if (wnds[set][i] == index)
    //     {
    //         has_index = 1;
    //         break;
    //     }
    // }
    // assert(!has_index);
    return index;
}

// called on every cache hit and cache fill
void CACHE::llc_update_replacement_state(uint32_t cpu, uint32_t set, uint32_t way, uint64_t full_addr, uint64_t ip, uint64_t victim_addr, uint32_t type, uint8_t hit)
{
    string TYPE_NAME;
    if (type == LOAD)
        TYPE_NAME = "LOAD";
    else if (type == RFO)
        TYPE_NAME = "RFO";
    else if (type == PREFETCH)
        TYPE_NAME = "PF";
    else if (type == WRITEBACK)
        TYPE_NAME = "WB";
    else
        assert(0);

    if (hit)
        TYPE_NAME += "_HIT";
    else
        TYPE_NAME += "_MISS";

    if ((type == WRITEBACK) && ip)
        assert(0);

    // uncomment this line to see the LLC accesses
    // cout << "CPU: " << cpu << "  LLC " << setw(9) << TYPE_NAME << " set: " << setw(5) << set << " way: " << setw(2) << way;
    // cout << hex << " paddr: " << setw(12) << paddr << " ip: " << setw(8) << ip << " victim_addr: " << victim_addr << dec << endl;

    if (wnds[set].size() >= WND_SIZE)
    {
        wnds[set].erase(wnds[set].begin());
    }
    if (hit || type != PREFETCH)
    {
        wnds[set].push_back(way);
    }
}

void CACHE::llc_replacement_final_stats()
{
}
