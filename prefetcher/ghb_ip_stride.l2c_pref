#include "cache.h"
#include <stdio.h>

#define PREFETCH_DEGREE 9
#define PRO_HEAD 1
#define GHB_SIZE 256
#define IT_SIZE 256

typedef struct 
{
    unsigned long long pc;
    unsigned long long addr;
    unsigned int prev;
} GHB_ENTRY;

GHB_ENTRY ghb[GHB_SIZE] = {0};

typedef struct 
{
    unsigned int prev;
} IT_ENTRY;

IT_ENTRY it[IT_SIZE] = {0};

unsigned int curr_idx = 0;

void CACHE::l2c_prefetcher_initialize()
{
    printf("GHB PC/CS prefetching\n");
}

float cache_access = 0;
float cache_miss = 0;

uint32_t CACHE::l2c_prefetcher_operate(uint64_t addr, uint64_t ip, uint8_t cache_hit, uint8_t type, uint32_t metadata_in)
{
    cache_access = cache_access + 1;
    if (!cache_hit) {
        cache_miss = cache_miss + 1;
    }
    if (ghb[it[ip % IT_SIZE].prev].pc == ip) {
        ghb[curr_idx].prev = it[ip % IT_SIZE].prev;
    } 
    else {
        ghb[curr_idx].prev = curr_idx;
    }
    ghb[curr_idx].addr = addr;
    ghb[curr_idx].pc = ip;
    it[ip % IT_SIZE].prev = curr_idx;

    uint64_t addr1, addr2;
    int s1, s2;
    uint64_t prefetch_addr;

    if (ghb[curr_idx].prev == curr_idx) {
        goto end;
    }
    addr1 = ghb[ghb[curr_idx].prev].addr;
    if (ghb[ghb[curr_idx].prev].prev == ghb[curr_idx].prev || ghb[ghb[ghb[curr_idx].prev].prev].pc != ip) {
        goto end;
    }
    addr2 = ghb[ghb[ghb[curr_idx].prev].prev].addr;

    s1 = addr - addr1;
    s2 = addr1 - addr2;
    if (s1 == s2) {
        for (int i = PRO_HEAD; i <= PRO_HEAD + PREFETCH_DEGREE + 1; i++) {
            prefetch_addr = addr + i * s1;
            if (MSHR.occupancy < (MSHR.SIZE>>1))
	            prefetch_line(ip, addr, prefetch_addr, FILL_L2, 0);
            else
	            prefetch_line(ip, addr, prefetch_addr, FILL_LLC, 0);
        }
    }

end:
    curr_idx = (curr_idx + 1) % GHB_SIZE;
    return metadata_in;
}

uint32_t CACHE::l2c_prefetcher_cache_fill(uint64_t addr, uint32_t set, uint32_t way, uint8_t prefetch, uint64_t evicted_addr, uint32_t metadata_in)
{
    return metadata_in;
}

void CACHE::l2c_prefetcher_final_stats()
{
    printf("GHB PC/CS prefetching over\n");
}
